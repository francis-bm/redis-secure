events {}

http {
    server {
        listen 443 ssl;
        server_name _;

        ssl_certificate /etc/nginx/certs/cert.pem;
        ssl_certificate_key /etc/nginx/certs/key.pem;

        # Handle static assets (CSS, JS, images, etc.)
        location ~* ^/(assets|static|favicon\.ico|.*\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot))/ {
            proxy_pass http://redisinsight:5540;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Handle favicon specifically
        location = /favicon.ico {
            proxy_pass http://redisinsight:5540/favicon.ico;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /redis-dashboard/ {
            # Strip the /redis-dashboard prefix and pass to Redis Insight
            rewrite ^/redis-dashboard/?(.*) /$1 break;
            proxy_pass http://redisinsight:5540;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /redis-dashboard;
            
            # Handle WebSocket connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Handle redirects properly
            proxy_redirect / /redis-dashboard/;
        }

        location / {
            return 403;
        }
    }

    server {
        listen 80;
        return 301 https://$host$request_uri;
    }
}